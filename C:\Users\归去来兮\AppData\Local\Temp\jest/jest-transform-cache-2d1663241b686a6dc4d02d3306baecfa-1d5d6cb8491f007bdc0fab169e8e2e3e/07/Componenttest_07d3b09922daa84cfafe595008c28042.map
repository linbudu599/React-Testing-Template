{"version":3,"file":"/Users/qiongxin/Desktop/React-Testing-Template/Component.test.tsx","sources":["/Users/qiongxin/Desktop/React-Testing-Template/Component.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport Enzyme, { render, shallow, mount } from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\nimport MyComponent, { commonFunc, asyncFunc, data } from './Component';\n\nEnzyme.configure({ adapter: new Adapter() });\n\ndescribe('Common Component Test', () => {\n  const commonFuncMock = jest.fn(commonFunc);\n  const asyncFuncMock = jest.fn(asyncFunc);\n  const conditionalFuncMock = jest.fn(() => true);\n\n  asyncFuncMock.mockResolvedValue(7);\n\n  const injectProps = {\n    commonProp: 599,\n    commonFunc: commonFuncMock,\n    asyncFunc: asyncFuncMock,\n    conditionalFunc: conditionalFuncMock,\n  };\n\n  it('should invoke function from props when rendering', () => {\n    const wrapper = mount(<MyComponent {...injectProps} />);\n    expect(commonFuncMock).toBeCalledWith('budu');\n    expect(asyncFuncMock).toBeCalledWith('budu');\n  });\n\n  it('should use property from props', () => {\n    const wrapper = shallow(<MyComponent {...injectProps} />);\n\n    expect(wrapper.find('p.common-prop').text()).toBe(\n      String(injectProps.commonProp)\n    );\n  });\n\n  it('should render common-func button and be able to invoke commonFunc ', () => {\n    const wrapper = shallow(<MyComponent {...injectProps} />);\n    const commonFuncBtn = wrapper.find('button.common-func');\n    expect(commonFuncBtn.text()).toBe('Invoke Common Function');\n    commonFuncBtn.simulate('click');\n    expect(commonFuncMock).toBeCalledWith('linbudu');\n    expect(commonFuncMock.mock.results[0].value).toBe(false);\n  });\n\n  it('should render async-func button and be able to invoke asyncFunc ', async () => {\n    expect.assertions(2);\n    const wrapper = shallow(<MyComponent {...injectProps} />);\n    const asyncFuncBtn = wrapper.find('button.async-func');\n    expect(asyncFuncBtn.text()).toBe('Invoke Async Function');\n    asyncFuncBtn.simulate('click');\n    expect(asyncFuncMock).toBeCalledWith('linbudu');\n    // TODO: deal with outside async method\n    // expect(asyncFuncMock.mock.results[0].value).toBe(7);\n  });\n\n  it('should render inside-func button and be able to invoke insideFunc ', async () => {\n    const wrapper = mount(<MyComponent {...injectProps} />);\n    const insideFuncBtn = wrapper.find('button.inside-func');\n    const count = wrapper.find('p.count');\n    expect(insideFuncBtn.text()).toBe('Invoke Inside Function');\n    expect(count.text()).toBe('0');\n    insideFuncBtn.simulate('click');\n    expect(count.text()).toBe('1');\n    insideFuncBtn.simulate('click');\n    expect(count.text()).toBe('2');\n  });\n\n  it('should render items correctly', () => {\n    const wrapper = mount(<MyComponent {...injectProps} />);\n    const infoElements = wrapper.find('p.info');\n    expect(infoElements.length).toBe(3);\n    for (let i = 0; i < infoElements.length; i++) {\n      const infoItem = Object.values(data[i]);\n      expect(infoElements.at(i).text()).toBe(infoItem.join(','));\n    }\n  });\n\n  it('should render conditional DOM only when conditionalFunc return true', () => {\n    conditionalFuncMock.mockReturnValueOnce(true);\n    const wrapper = mount(<MyComponent {...injectProps} />);\n    expect(typeof wrapper.prop('conditionalFunc')).toBe('function');\n    const conditionalEle = wrapper.find('p.conditional');\n    expect(conditionalEle.text()).toBe('Conditional Function');\n\n    // PUZZLE: 重新渲染wrapper会使得mockValueOnce重新计算\n    conditionalFuncMock.mockReturnValue(false);\n    const wrapperFalse = mount(<MyComponent {...injectProps} />);\n    expect(wrapperFalse.exists('p.conditional')).toBeFalsy();\n  });\n\n  it('should fetch remote data and render to DOM', () => {\n    const wrapper = mount(<MyComponent {...injectProps} />);\n    // TODO: remoteData test details?\n    const dataElement = wrapper.find('p.remote-data');\n    // expect(dataElement.length).toBe(15);\n    // expect()\n  });\n\n  it('should set props correctly', () => {\n    const wrapper = mount(\n      <MyComponent {...injectProps} propsToBeSet={'INIT'} />\n    );\n\n    const setPropsEle = wrapper.find('p.set-prop');\n    expect(setPropsEle.text()).toBe('INIT');\n\n    wrapper.setProps({ ...injectProps, propsToBeSet: 'MODIFIED' });\n    expect(setPropsEle.text()).toBe('MODIFIED');\n  });\n\n  it('should set method correctly', () => {\n    const wrapper = mount(\n      <MyComponent {...injectProps} methodTobeSet={() => true} />\n    );\n\n    const setMethodEle = wrapper.find('p.set-method');\n    expect(setMethodEle.text()).toBe('INIT');\n\n    wrapper.setProps({ methodTobeSet: () => false });\n    expect(setMethodEle.text()).toBe('MODIFIED');\n  });\n});\n"]}